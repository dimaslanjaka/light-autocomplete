{"version":3,"file":"light-autocomplete.js","sources":["../../../../src/findStr.ts","../../src/autocomplete.js"],"sourcesContent":["/**\n * search string from list\n * @param keyword string to search\n * @param dictionary search list\n * @param wildcard when disabled search only for keywrod start with. when enabled push all possible matches.\n */\nexport default function findStr(keyword: string, dictionary: string[], wildcard = false) {\n  const result = [] as string[];\n  for (let i = 0; i < dictionary.length; i++) {\n    const line = dictionary[i];\n    const startWith = new RegExp('^' + keyword, 'gmi');\n    const endWith = new RegExp(keyword + '$', 'gmi');\n    if (startWith.test(line)) {\n      // find starts with\n      result.push(line);\n    } else if (line.includes(keyword)) {\n      // find matches keyword\n      result.push(line);\n    } else if (endWith.test(line)) {\n      // find ends with\n      result.push(line);\n    } else if (wildcard) {\n      // find without vowel words\n      const chars = keyword.replace(/[aeiou]/gi, '').split('');\n      if (chars.filter(kw => line.includes(kw)).length > 0) result.push(line);\n    }\n  }\n  return result;\n}\n","import findStr from './findStr';\n\n/**\n * autocomplete\n * @param {HTMLElement|Element|HTMLInputElement|HTMLTextAreaElement|null} input\n * @param {string[]} arrayData\n * @param {boolean} wildcard\n */\nexport default function autocomplete(input, arrayData, wildcard) {\n  // skip null\n  if (input == null) return console.error('null input for autocomplete');\n  /*the autocomplete function takes two arguments,\n  the text field element and an array of possible autocompleted values:*/\n  var currentFocus;\n  /*execute a function when someone writes in the text field:*/\n  input.addEventListener('input', function (e) {\n    var a,\n      b,\n      val = e.target.value;\n    /*close any already open lists of autocompleted values*/\n    closeAllLists();\n    if (!val) {\n      return false;\n    }\n    currentFocus = -1;\n    /*create a DIV element that will contain the items (values):*/\n    a = document.createElement('DIV');\n    a.setAttribute('id', e.target.id + 'autocomplete-list');\n    a.setAttribute('class', 'light-autocomplete-items');\n    /*append the DIV element as a child of the autocomplete container:*/\n    e.target.parentNode.appendChild(a);\n    /*for each item in the array...*/\n    // for (let i = 0; i < arrayData.length; i++) {\n    //   /*check if the item starts with the same letters as the text field value:*/\n    //   if (arrayData[i].substring(0, val.length).toUpperCase() == val.toUpperCase()) {\n    //     /*create a DIV element for each matching element:*/\n    //     b = document.createElement('DIV');\n    //     /*make the matching letters bold:*/\n    //     b.innerHTML = '<strong>' + arrayData[i].substring(0, val.length) + '</strong>';\n    //     b.innerHTML += arrayData[i].substring(val.length);\n    //     /*insert a input field that will hold the current array item's value:*/\n    //     b.innerHTML += \"<input type='hidden' value='\" + arrayData[i] + \"'>\";\n    //     /*execute a function when someone clicks on the item value (DIV element):*/\n    //     b.addEventListener('click', function (e) {\n    //       /*insert the value for the autocomplete text field:*/\n    //       input.value = e.target.getElementsByTagName('input')[0].value;\n    //       /*close the list of autocompleted values,\n    //           (or any other open lists of autocompleted values:*/\n    //       closeAllLists();\n    //     });\n    //     a.appendChild(b);\n    //   }\n    // }\n    const dictionaries = findStr(val, arrayData, wildcard);\n    for (let i = 0; i < dictionaries.length; i++) {\n      const line = dictionaries[i];\n      b = document.createElement('DIV');\n      /*create a DIV element for each matching element:*/\n      b = document.createElement('DIV');\n      /*make the matching letters bold:*/\n      // b.innerHTML = '<strong>' + line.substring(0, val.length) + '</strong>';\n      b.innerHTML = '';\n      b.innerHTML += line.substring(val.length);\n      /*insert a input field that will hold the current array item's value:*/\n      b.innerHTML += \"<input type='hidden' value='\" + line + \"'>\";\n      /*execute a function when someone clicks on the item value (DIV element):*/\n      b.addEventListener('click', function (e) {\n        /*insert the value for the autocomplete text field:*/\n        input.value = e.target.getElementsByTagName('input')[0].value;\n        /*close the list of autocompleted values,\n              (or any other open lists of autocompleted values:*/\n        closeAllLists();\n      });\n      a.appendChild(b);\n    }\n  });\n  /*execute a function presses a key on the keyboard:*/\n  input.addEventListener('keydown', function (e) {\n    var x = document.getElementById(e.target.id + 'autocomplete-list');\n    if (x) x = x.getElementsByTagName('div');\n    if (e.keyCode == 40) {\n      /*If the arrow DOWN key is pressed,\n        increase the currentFocus variable:*/\n      currentFocus++;\n      /*and and make the current item more visible:*/\n      addActive(x);\n    } else if (e.keyCode == 38) {\n      //up\n      /*If the arrow UP key is pressed,\n        decrease the currentFocus variable:*/\n      currentFocus--;\n      /*and and make the current item more visible:*/\n      addActive(x);\n    } else if (e.keyCode == 13) {\n      /*If the ENTER key is pressed, prevent the form from being submitted,*/\n      e.preventDefault();\n      if (currentFocus > -1) {\n        /*and simulate a click on the \"active\" item:*/\n        if (x) x[currentFocus].click();\n      }\n    }\n  });\n  function addActive(x) {\n    /*a function to classify an item as \"active\":*/\n    if (!x) return false;\n    /*start by removing the \"active\" class on all items:*/\n    removeActive(x);\n    if (currentFocus >= x.length) currentFocus = 0;\n    if (currentFocus < 0) currentFocus = x.length - 1;\n    /*add class \"light-autocomplete-active\":*/\n    x[currentFocus].classList.add('light-autocomplete-active');\n  }\n  function removeActive(x) {\n    /*a function to remove the \"active\" class from all autocomplete items:*/\n    for (var i = 0; i < x.length; i++) {\n      x[i].classList.remove('light-autocomplete-active');\n    }\n  }\n  function closeAllLists(elmnt) {\n    /*close all autocomplete lists in the document,\n    except the one passed as an argument:*/\n    var x = document.getElementsByClassName('light-autocomplete-items');\n    for (var i = 0; i < x.length; i++) {\n      if (elmnt != x[i] && elmnt != input) {\n        x[i].parentNode.removeChild(x[i]);\n      }\n    }\n  }\n\n  /*execute a function when someone clicks in the document:*/\n  document.addEventListener('click', function (e) {\n    closeAllLists(e.target);\n  });\n}\n"],"names":[],"mappings":"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"}