{"version":3,"file":"autocomplete.min.js","sources":["../src/autocomplete.js"],"sourcesContent":["/**\n * autocomplete\n * @param {HTMLElement|Element|HTMLInputElement|HTMLTextAreaElement|null} inp\n * @param {string[]} arr\n */\nexport default function autocomplete(inp, arr) {\n  // skip null\n  if (inp == null) return console.error('null input for autocomplete');\n  /*the autocomplete function takes two arguments,\n  the text field element and an array of possible autocompleted values:*/\n  var currentFocus;\n  /*execute a function when someone writes in the text field:*/\n  inp.addEventListener('input', function (_e) {\n    var a,\n      b,\n      i,\n      val = this.value;\n    /*close any already open lists of autocompleted values*/\n    closeAllLists();\n    if (!val) {\n      return false;\n    }\n    currentFocus = -1;\n    /*create a DIV element that will contain the items (values):*/\n    a = document.createElement('DIV');\n    a.setAttribute('id', this.id + 'autocomplete-list');\n    a.setAttribute('class', 'autocomplete-items');\n    /*append the DIV element as a child of the autocomplete container:*/\n    this.parentNode.appendChild(a);\n    /*for each item in the array...*/\n    for (i = 0; i < arr.length; i++) {\n      /*check if the item starts with the same letters as the text field value:*/\n      if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n        /*create a DIV element for each matching element:*/\n        b = document.createElement('DIV');\n        /*make the matching letters bold:*/\n        b.innerHTML = '<strong>' + arr[i].substr(0, val.length) + '</strong>';\n        b.innerHTML += arr[i].substr(val.length);\n        /*insert a input field that will hold the current array item's value:*/\n        b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n        /*execute a function when someone clicks on the item value (DIV element):*/\n        b.addEventListener('click', function (_e) {\n          /*insert the value for the autocomplete text field:*/\n          inp.value = this.getElementsByTagName('input')[0].value;\n          /*close the list of autocompleted values,\n              (or any other open lists of autocompleted values:*/\n          closeAllLists();\n        });\n        a.appendChild(b);\n      }\n    }\n  });\n  /*execute a function presses a key on the keyboard:*/\n  inp.addEventListener('keydown', function (e) {\n    var x = document.getElementById(this.id + 'autocomplete-list');\n    if (x) x = x.getElementsByTagName('div');\n    if (e.keyCode == 40) {\n      /*If the arrow DOWN key is pressed,\n        increase the currentFocus variable:*/\n      currentFocus++;\n      /*and and make the current item more visible:*/\n      addActive(x);\n    } else if (e.keyCode == 38) {\n      //up\n      /*If the arrow UP key is pressed,\n        decrease the currentFocus variable:*/\n      currentFocus--;\n      /*and and make the current item more visible:*/\n      addActive(x);\n    } else if (e.keyCode == 13) {\n      /*If the ENTER key is pressed, prevent the form from being submitted,*/\n      e.preventDefault();\n      if (currentFocus > -1) {\n        /*and simulate a click on the \"active\" item:*/\n        if (x) x[currentFocus].click();\n      }\n    }\n  });\n  function addActive(x) {\n    /*a function to classify an item as \"active\":*/\n    if (!x) return false;\n    /*start by removing the \"active\" class on all items:*/\n    removeActive(x);\n    if (currentFocus >= x.length) currentFocus = 0;\n    if (currentFocus < 0) currentFocus = x.length - 1;\n    /*add class \"autocomplete-active\":*/\n    x[currentFocus].classList.add('autocomplete-active');\n  }\n  function removeActive(x) {\n    /*a function to remove the \"active\" class from all autocomplete items:*/\n    for (var i = 0; i < x.length; i++) {\n      x[i].classList.remove('autocomplete-active');\n    }\n  }\n  function closeAllLists(elmnt) {\n    /*close all autocomplete lists in the document,\n    except the one passed as an argument:*/\n    var x = document.getElementsByClassName('autocomplete-items');\n    for (var i = 0; i < x.length; i++) {\n      if (elmnt != x[i] && elmnt != inp) {\n        x[i].parentNode.removeChild(x[i]);\n      }\n    }\n  }\n\n  /*execute a function when someone clicks in the document:*/\n  document.addEventListener('click', function (e) {\n    closeAllLists(e.target);\n  });\n}\n"],"names":["inp","arr","console","error","currentFocus","addActive","x","i","length","classList","remove","removeActive","add","closeAllLists","elmnt","document","getElementsByClassName","parentNode","removeChild","addEventListener","_e","a","b","val","this","value","createElement","setAttribute","id","appendChild","substr","toUpperCase","innerHTML","getElementsByTagName","e","getElementById","keyCode","preventDefault","click","target"],"mappings":"6PAKe,SAAsBA,EAAKC,GAExC,GAAW,MAAPD,EAAa,OAAOE,QAAQC,MAAM,+BAGtC,IAAIC,EAoEJ,SAASC,EAAUC,GAEjB,IAAKA,EAAG,OAAO,GAQjB,SAAsBA,GAEpB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAEE,OAAQD,IAC5BD,EAAEC,GAAGE,UAAUC,OAAO,sBAE1B,CAXEC,CAAaL,GACTF,GAAgBE,EAAEE,SAAQJ,EAAe,GACzCA,EAAe,IAAGA,EAAeE,EAAEE,OAAS,GAEhDF,EAAEF,GAAcK,UAAUG,IAAI,sBAChC,CAOA,SAASC,EAAcC,GAIrB,IADA,IAAIR,EAAIS,SAASC,uBAAuB,sBAC/BT,EAAI,EAAGA,EAAID,EAAEE,OAAQD,IACxBO,GAASR,EAAEC,IAAMO,GAASd,GAC5BM,EAAEC,GAAGU,WAAWC,YAAYZ,EAAEC,GAGpC,CA3FAP,EAAImB,iBAAiB,SAAS,SAAUC,GACtC,IAAIC,EACFC,EACAf,EACAgB,EAAMC,KAAKC,MAGb,GADAZ,KACKU,EACH,OAAO,EAUT,IARAnB,GAAgB,GAEhBiB,EAAIN,SAASW,cAAc,QACzBC,aAAa,KAAMH,KAAKI,GAAK,qBAC/BP,EAAEM,aAAa,QAAS,sBAExBH,KAAKP,WAAWY,YAAYR,GAEvBd,EAAI,EAAGA,EAAIN,EAAIO,OAAQD,IAEtBN,EAAIM,GAAGuB,OAAO,EAAGP,EAAIf,QAAQuB,eAAiBR,EAAIQ,iBAEpDT,EAAIP,SAASW,cAAc,QAEzBM,UAAY,WAAa/B,EAAIM,GAAGuB,OAAO,EAAGP,EAAIf,QAAU,YAC1Dc,EAAEU,WAAa/B,EAAIM,GAAGuB,OAAOP,EAAIf,QAEjCc,EAAEU,WAAa,+BAAiC/B,EAAIM,GAAK,KAEzDe,EAAEH,iBAAiB,SAAS,SAAUC,GAEpCpB,EAAIyB,MAAQD,KAAKS,qBAAqB,SAAS,GAAGR,MAGlDZ,GACF,IACAQ,EAAEQ,YAAYP,GAGpB,IAEAtB,EAAImB,iBAAiB,WAAW,SAAUe,GACxC,IAAI5B,EAAIS,SAASoB,eAAeX,KAAKI,GAAK,qBACtCtB,IAAGA,EAAIA,EAAE2B,qBAAqB,QACjB,IAAbC,EAAEE,SAGJhC,IAEAC,EAAUC,IACY,IAAb4B,EAAEE,SAIXhC,IAEAC,EAAUC,IACY,IAAb4B,EAAEE,UAEXF,EAAEG,iBACEjC,GAAgB,GAEdE,GAAGA,EAAEF,GAAckC,QAG7B,IA6BAvB,SAASI,iBAAiB,SAAS,SAAUe,GAC3CrB,EAAcqB,EAAEK,OAClB,GACF"}