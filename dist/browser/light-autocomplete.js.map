{"version":3,"file":"light-autocomplete.js","sources":["../../../src/findStr.ts","../../src/autocomplete.js"],"sourcesContent":["/**\n * search string from list\n * @param keyword string to search\n * @param dictionary search list\n * @param wildcard when disabled search only for keywrod start with. when enabled push all possible matches.\n */\nexport default function findStr(keyword: string, dictionary: string[], wildcard = false) {\n  const result = ([] as string[])\n    // starts with\n    .concat(dictionary.filter(str => new RegExp('^' + keyword, 'gmi').test(str)))\n    // ends with\n    .concat(dictionary.filter(str => new RegExp(keyword + '$', 'gmi').test(str)));\n  if (wildcard) {\n    // matches\n    result.push(...dictionary.filter(str => str.includes(keyword)));\n    // without vowel words\n    result.push(...dictionary.filter(str => str.includes(keyword)));\n  }\n\n  return result.filter(function (x, i, a) {\n    return a.indexOf(x) === i;\n  });\n}\n","import findStr from './findStr';\n\n/**\n * autocomplete\n * @param {HTMLElement|Element|HTMLInputElement|HTMLTextAreaElement|null} input\n * @param {string[]} arrayData\n * @param {boolean} wildcard\n */\nexport default function autocomplete(input, arrayData, wildcard) {\n  // skip null\n  if (input == null) return console.error('null input for autocomplete');\n  /*the autocomplete function takes two arguments,\n  the text field element and an array of possible autocompleted values:*/\n  var currentFocus;\n  /*execute a function when someone writes in the text field:*/\n  input.addEventListener('input', function (e) {\n    var a, b;\n    const keyword = e.target.value;\n    /*close any already open lists of autocompleted values*/\n    closeAllLists();\n    if (!keyword) {\n      return false;\n    }\n    currentFocus = -1;\n    /*create a DIV element that will contain the items (values):*/\n    a = document.createElement('DIV');\n    a.setAttribute('id', e.target.id + 'autocomplete-list');\n    a.setAttribute('class', 'light-autocomplete-items');\n    /*append the DIV element as a child of the autocomplete container:*/\n    e.target.parentNode.appendChild(a);\n    /*for each item in the array...*/\n    // for (let i = 0; i < arrayData.length; i++) {\n    //   /*check if the item starts with the same letters as the text field value:*/\n    //   if (arrayData[i].substring(0, keyword.length).toUpperCase() == keyword.toUpperCase()) {\n    //     /*create a DIV element for each matching element:*/\n    //     b = document.createElement('DIV');\n    //     /*make the matching letters bold:*/\n    //     b.innerHTML = '<strong>' + arrayData[i].substring(0, keyword.length) + '</strong>';\n    //     b.innerHTML += arrayData[i].substring(keyword.length);\n    //     /*insert a input field that will hold the current array item's value:*/\n    //     b.innerHTML += \"<input type='hidden' value='\" + arrayData[i] + \"'>\";\n    //     /*execute a function when someone clicks on the item value (DIV element):*/\n    //     b.addEventListener('click', function (e) {\n    //       /*insert the value for the autocomplete text field:*/\n    //       input.value = e.target.getElementsByTagName('input')[0].value;\n    //       /*close the list of autocompleted values,\n    //           (or any other open lists of autocompleted values:*/\n    //       closeAllLists();\n    //     });\n    //     a.appendChild(b);\n    //   }\n    // }\n    const dictionaries = findStr(keyword, arrayData, wildcard);\n    // .sort((a, b) => {\n    //   const ai = a.indexOf(keyword);\n    //   const bi = b.indexOf(keyword);\n    //   return (ai > -1 && bi > -1 && ai - bi) || -1;\n    // })\n    // .reverse();\n    for (let i = 0; i < dictionaries.length; i++) {\n      const line = dictionaries[i];\n      b = document.createElement('DIV');\n      /*create a DIV element for each matching element:*/\n      b = document.createElement('DIV');\n      /*make the matching letters bold:*/\n      b.innerHTML = '';\n      /* print output string */\n      // b.innerHTML += '<b>' + line.substring(0, keyword.length) + '</b>';\n      // b.innerHTML += line.substring(keyword.length);\n      b.innerHTML += line.replace(new RegExp(keyword, 'gim'), '<b>' + keyword + '</b>');\n      /*insert a input field that will hold the current array item's value:*/\n      b.innerHTML += \"<input type='hidden' value='\" + line + \"'>\";\n      /*execute a function when someone clicks on the item value (DIV element):*/\n      b.addEventListener('click', function (e) {\n        /*insert the value for the autocomplete text field:*/\n        input.value = e.target.getElementsByTagName('input')[0].value;\n        /*close the list of autocompleted values,\n              (or any other open lists of autocompleted values:*/\n        closeAllLists();\n      });\n      a.appendChild(b);\n    }\n  });\n\n  /*execute a function presses a key on the keyboard:*/\n  input.addEventListener('keydown', function (e) {\n    var x = document.getElementById(e.target.id + 'autocomplete-list');\n    if (x) x = x.getElementsByTagName('div');\n    if (e.keyCode == 40) {\n      /*If the arrow DOWN key is pressed,\n        increase the currentFocus variable:*/\n      currentFocus++;\n      /*and and make the current item more visible:*/\n      addActive(x);\n    } else if (e.keyCode == 38) {\n      //up\n      /*If the arrow UP key is pressed,\n        decrease the currentFocus variable:*/\n      currentFocus--;\n      /*and and make the current item more visible:*/\n      addActive(x);\n    } else if (e.keyCode == 13) {\n      /*If the ENTER key is pressed, prevent the form from being submitted,*/\n      e.preventDefault();\n      if (currentFocus > -1) {\n        /*and simulate a click on the \"active\" item:*/\n        if (x) x[currentFocus].click();\n      }\n    }\n  });\n  function addActive(x) {\n    /*a function to classify an item as \"active\":*/\n    if (!x) return false;\n    /*start by removing the \"active\" class on all items:*/\n    removeActive(x);\n    if (currentFocus >= x.length) currentFocus = 0;\n    if (currentFocus < 0) currentFocus = x.length - 1;\n    /*add class \"light-autocomplete-active\":*/\n    x[currentFocus].classList.add('light-autocomplete-active');\n  }\n  function removeActive(x) {\n    /*a function to remove the \"active\" class from all autocomplete items:*/\n    for (var i = 0; i < x.length; i++) {\n      x[i].classList.remove('light-autocomplete-active');\n    }\n  }\n  function closeAllLists(elmnt) {\n    /*close all autocomplete lists in the document,\n    except the one passed as an argument:*/\n    var x = document.getElementsByClassName('light-autocomplete-items');\n    for (var i = 0; i < x.length; i++) {\n      if (elmnt != x[i] && elmnt != input) {\n        x[i].parentNode.removeChild(x[i]);\n      }\n    }\n  }\n\n  /*execute a function when someone clicks in the document:*/\n  document.addEventListener('click', function (e) {\n    closeAllLists(e.target);\n  });\n}\n"],"names":["autocomplete","input","arrayData","wildcard","console","error","currentFocus","addEventListener","e","a","b","keyword","target","value","closeAllLists","document","createElement","setAttribute","id","parentNode","appendChild","dictionaries","findStr","i","length","line","innerHTML","replace","RegExp","getElementsByTagName","x","getElementById","keyCode","addActive","preventDefault","click","removeActive","classList","add","remove","elmnt","getElementsByClassName","removeChild"],"mappings":"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"}